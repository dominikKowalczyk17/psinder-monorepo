name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  mobile:
    name: Mobile App (React Native)
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./mobile
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Build app
      run: npm run build

  api:
    name: Backend API (Spring Boot)
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./api
    
    strategy:
      matrix:
        java-version: [17, 21]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run tests
      run: mvn clean test
    
    - name: Build application
      run: mvn clean package -DskipTests
    
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact-${{ matrix.java-version }}
        path: api/target/*.jar

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [mobile, api]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: maven
    
    - name: Install root dependencies
      run: npm install
    
    - name: Install mobile dependencies
      run: npm install --workspace=mobile
    
    - name: Start API in background
      run: |
        cd api
        mvn spring-boot:run -Dspring-boot.run.profiles=test &
        echo $! > api.pid
    
    - name: Wait for API to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:8080/actuator/health; do sleep 2; done'
    
    - name: Run integration tests
      run: npm run test --workspace=mobile -- --testNamePattern="integration"
    
    - name: Stop API
      run: |
        if [ -f api/api.pid ]; then
          kill $(cat api/api.pid) || true
        fi